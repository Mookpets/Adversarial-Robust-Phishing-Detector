# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10ejxnm9KPkdWulm1Ljkb7vFpXiYp_WdO
"""

!pip install gradio

import gradio as gr
from transformers import DistilBertForSequenceClassification, DistilBertTokenizerFast
import torch

# 🔁 Load model + tokenizer from the saved directory
model_path = "C:/Users/Asus/Downloads/model"
model = DistilBertForSequenceClassification.from_pretrained(model_path)
tokenizer = DistilBertTokenizerFast.from_pretrained(model_path)
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
model.to(device)

# 🧠 Define prediction function
def predict_email(text):
    inputs = tokenizer(text, return_tensors="pt", truncation=True, padding=True).to(device)
    with torch.no_grad():
        outputs = model(**inputs)
        logits = outputs.logits
        probs = torch.softmax(logits, dim=1).cpu().numpy()[0]
    label = "Phishing" if probs[1] > 0.5 else "Legitimate"
    confidence = round(probs[1] * 100, 2) if label == "Phishing" else round(probs[0] * 100, 2)
    return f"{label} ({confidence}% confidence)"

# 🎛️ Create Gradio Interface
iface = gr.Interface(
    fn=predict_email,
    inputs=gr.Textbox(lines=10, placeholder="Paste an email here..."),
    outputs="text",
    title="Adversarial-Robust Phishing Email Detector",
    description="Detects if an email is phishing or legitimate using a fine-tuned DistilBERT model.",
)

# 🚀 Launch
iface.launch(share=True)